name: ci-workflow

# actors
  # source repo: official terratest repo (gruntwork-io/terratest)
  # forked repo: (e.g., xyz/terratest, abc/terratest)
  # pr: created from forked repo, against source repo (gruntwork-io/terratest/pull/{PR NUMBER})
# flow
  # developer fork the source repo
  # developer creates a branch in the forked repo
  # developer does the development ðŸ˜Ž
  # developer creates a pr
  # webhook on source repo calls a webapp when the pr has been created
  # this pipeline will be triggered automatically by the webapp, with the following input values
    # repo: name of the forked repo (e.g. xyz/terratest)
    # branch: branch name on the forked repo (e.g. feature/adding-some-important-module)
    # target_repository: home of the target_pr, which is the source repo (gruntwork-io/terratest)
    # target_pr: pr number on the source repo (e.g. 14, 25, etc.)

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository info'
        required: true
      branch:
        description: 'Name of the branch'
        required: true

jobs:
  ci-job:
    runs-on: [ubuntu-latest]
    steps:
      - name: checkout to repo
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.branch }}
      - name: test
        run: |
          which terraform
 